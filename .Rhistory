filter(number_epochs < 37.5)# these subjects have to be excluded
# modify table (f.ex. add tmt b-a)
table_power_5 <- table_power_5%>%
mutate(facit_f_FS = as.numeric(facit_f_FS),
tmt_b_minus_a = tmt_b_time-tmt_a_time)
table_power_5 <- merge(table_power_5, number_of_epochs_5)
test_table <- table_power_5%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,years_of_education,number_epochs,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
test_table%>%
group_by(cluster_2)%>%
summarise(mean_age = mean(age),
sd_age = sd(age),
mean_epochs = mean(number_epochs))# sind immerhin fast identisch vom Alter her
t.test(age~cluster_2, data = test_table, alternative = "two.sided")
# Define the channel names you want to select (for delta)
frontal_channels <- c('22','105','11','40','75','39','49','82','48','19','112','25','94','93','83','92','95','96','21','50','10','59','26')
# Filter rows with the specified channel names
table_power_frontal <- table_power_5%>%
filter(table_power_5$channel %in% frontal_channels)
# Define the channel names you want to select (for beta)
central_channels <- c('85','34','65','37','90','66','1','68','3','67','2','70','74','76','81','34','37','42','86','43','87','44','88','45','89','46','77','5','78','6','7','79','8','80','71','35','72','36','73')
# Filter rows with the specified channel names
table_power_central <- table_power_5%>%
filter(table_power_5$channel %in% central_channels)
#-------3. summarise mean -----------------
df_corr_frontal <- table_power_frontal%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,years_of_education,sex,hads_d_total_score, number_epochs, cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_central <- table_power_central%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,hads_d_total_score, number_epochs, cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
#------- 4. demographics-----------------
# age
df_corr_frontal%>%
group_by(participant_id)%>%
ggplot(aes(age))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()
# years of education
df_corr_frontal%>%
group_by(participant_id)%>%
ggplot(aes(years_of_education))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()
t.test(years_of_education~cluster_2, data = df_corr_frontal, alternative = "two.sided")
wilcox.test(years_of_education~cluster_2, data = df_corr_frontal,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# without PCS hat eine schiefe Verteilung
df_corr_frontal%>%
group_by(cluster_2)%>%
count()
df_corr_frontal%>%
group_by(cluster_2,sex)%>%
count()
df_corr_frontal%>%
group_by(cluster_2)%>%
summarise(mean_age = mean(age),
sd_age = sd(age))
t.test(age~cluster_2, data = df_corr_frontal, alternative = "two.sided")
wilcox.test(age~cluster_2, data = df_corr_frontal,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# 0.69
table_behav <- df_corr_frontal%>%
group_by(cluster_2)%>%
summarise(mean_facit = mean(facit_f_FS, na.rm = T),
sd_facit = sd(facit_f_FS, na.rm = T),
mean_hads = mean(hads_d_total_score, na.rm = T),
sd_hads = sd(hads_d_total_score, na.rm = T),
mean_tmta = mean(tmt_a_time),
sd_tmta = sd(tmt_a_time),
mean_tmtb_a = mean(tmt_b_minus_a),
sd_tmtb_a = sd(tmt_b_minus_a),
mean_y_o = mean(years_of_education),
sd_y_o = sd(years_of_education),
mean_epoc = mean(number_epochs),
sd_epoc = sd(number_epochs))
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(facit_f_FS))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()# eine Gruppe ist schief!
leveneTest(facit_f_FS~cluster_2,data = df_corr_frontal)# nicht significant
# wilcox.test
wilcox.test(facit_f_FS~cluster_2, data = df_corr_frontal,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# 0.002
t.test(facit_f_FS~cluster_2, data = df_corr_frontal, alternative = "two.sided", paired = FALSE)# significant p = 0.001083
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(hads_d_total_score))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()# eine Gruppe ist schief
leveneTest(hads_d_total_score~cluster_2,data = df_corr_frontal)# not significant
t.test(hads_d_total_score~cluster_2, data = df_corr_frontal, alternative = "two.sided", paired = FALSE)# significant p = 0.001083
wilcox.test(hads_d_total_score~cluster_2, data = df_corr_frontal,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# without PCS hat eine schiefe Verteilung
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(tmt_a_time))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()# sieht okay aus
leveneTest(tmt_a_time~cluster_2,data = df_corr_frontal)# not significant
t.test(tmt_a_time~cluster_2, data = df_corr_frontal, alternative = "two.sided", paired = FALSE)# significant p = 0.001083
wilcox.test(tmt_a_time~cluster_2, data = df_corr_frontal,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(tmt_b_minus_a))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()# beide leicht schief (gleich)
leveneTest(tmt_b_minus_a~cluster_2,data = df_corr_frontal)# not significant
t.test(tmt_b_minus_a~cluster_2, data = df_corr_frontal, alternative = "two.sided", paired = FALSE)# significant p = 0.001083
wilcox.test(tmt_b_minus_a~cluster_2, data = df_corr_frontal,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# without PCS hat eine schiefe Verteilung
# number of epochs
df_corr_frontal%>%
group_by(cluster_2)%>%
summarise(mean_epoch = mean(number_epochs),
sd_age = sd(number_epochs))
t.test(number_epochs~cluster_2, data = df_corr_frontal, alternative = "two.sided", paired = FALSE)
df_corr_frontal%>%
ggplot(aes(x = number_epochs, y = mean_delta_power))+
geom_point()
cor.test(df_corr_frontal$mean_delta_power,df_corr_frontal$number_epochs)
df_corr_central%>%
ggplot(aes(x = number_epochs, y = mean_beta_power))+
geom_point()
cor.test(df_corr_central$mean_delta_power,df_corr_central$number_epochs)
# have a look at the whole data set (boxplots)
table_power_5%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_delta, color = cluster_2))+
geom_boxplot()
# per group
table_power_5%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_beta, color = cluster_2))+
geom_boxplot()
# have a look at the whole data set (boxplots)
table_power_5%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_delta, color = cluster_2))+
geom_boxplot()
# per group
table_power_5%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_beta, color = cluster_2))+
geom_boxplot()
# just the frontal channels
table_power_frontal%>%
group_by(participant_id, cluster_2)%>%
ggplot(aes(x = participant_id, y = rel_delta, color = group))+
geom_boxplot()#+
# just per group
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(x = group, y = mean_delta_power, color = group))+
geom_boxplot()
# just per group
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot()
# just per group (beta)
df_corr_central%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot()
# power values under 0 are clearly wrong -> have to be excluded
table_power_5 <- table_power_5%>%
filter(rel_delta > 0)
table_delta_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_delta = mean(rel_delta),
sd_rel_delta = sd(rel_delta),
lower_bound = mean_rel_delta - 3 * sd_rel_delta,
upper_bound = mean_rel_delta + 3 * sd_rel_delta) %>%
filter(rel_delta >= lower_bound & rel_delta <= upper_bound) %>%
ungroup()
test_missing <- table_delta_filtered%>%
group_by(channel,cluster_2)%>%
count()
table_delta_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_delta))+
geom_boxplot()+
geom_jitter()
table_delta_frontal_filtered <- table_delta_filtered%>%
filter(table_delta_filtered$channel %in% frontal_channels)
test_missing <- table_delta_frontal_filtered%>%
group_by(channel,cluster_2)%>%
count()
df_corr_frontal_filtered <- table_delta_frontal_filtered%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,years_of_education,moca,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_frontal_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot()+
geom_jitter()
# additional filtering (across group)
table_delta_filtered_cluster_2 <- table_delta_filtered%>%
group_by(cluster_2)%>%
mutate(mean_rel_delta = mean(rel_delta),
sd_rel_delta = sd(rel_delta),
lower_bound = mean_rel_delta - 3 * sd_rel_delta,
upper_bound = mean_rel_delta + 3 * sd_rel_delta) %>%
filter(rel_delta >= lower_bound & rel_delta <= upper_bound) %>%
ungroup()
table_frontal_filtered_cluster_2 <- table_delta_filtered_cluster_2%>%
filter(table_delta_filtered_cluster_2$channel %in% frontal_channels)
df_corr_frontal_filtered_cluster_2 <- table_frontal_filtered_cluster_2%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,moca,hads_d_total_score,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_delta_power = mean(rel_delta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_frontal_filtered_cluster_2%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot()+
geom_jitter()
df_corr_delta_filtered_cluster_2 <- table_delta_filtered_cluster_2%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age, cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_delta_power = mean(rel_delta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_delta_filtered_cluster_2%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot()+
geom_jitter()
t.test(mean_delta_power~cluster_2, data = df_corr_delta_filtered_cluster_2, alternative = 'two.sided')
# outliers delta absolute
table_delta_filtered_abs <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_abs_delta = mean(abs_delta),
sd_abs_delta = sd(abs_delta),
lower_bound = mean_abs_delta - 3 * sd_abs_delta,
upper_bound = mean_abs_delta + 3 * sd_abs_delta) %>%
filter(abs_delta >= lower_bound & abs_delta <= upper_bound) %>%
ungroup()
table_delta_filtered_abs%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = abs_delta))+
geom_boxplot()+
geom_jitter()
table_delta_frontal_filtered_abs <- table_delta_filtered_abs%>%
filter(table_delta_filtered_abs$channel %in% frontal_channels)
df_corr_frontal_filtered_abs <- table_delta_frontal_filtered_abs%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,years_of_education, cluster_2)%>%
summarise(mean_delta_power_abs = mean(abs_delta))
df_corr_frontal_filtered_abs%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power_abs, color = cluster_2))+
geom_boxplot()+
geom_jitter()
t.test(mean_delta_power_abs~cluster_2, data = df_corr_frontal_filtered_abs, alternative = 'less')
# sd +- 3 for beta
table_beta_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_beta = mean(rel_beta),
sd_rel_beta = sd(rel_beta),
lower_bound = mean_rel_beta - 3 * sd_rel_beta,
upper_bound = mean_rel_beta + 3 * sd_rel_beta) %>%
filter(rel_beta >= lower_bound & rel_beta <= upper_bound) %>%
ungroup()
table_beta_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_beta))+
geom_boxplot()+
geom_jitter()
table_central_filtered <- table_beta_filtered%>%
filter(table_beta_filtered$channel %in% central_channels)
df_corr_central_filtered <- table_central_filtered%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age, moca,hads_d_total_score,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_central_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot()+
geom_jitter()
# additional filtering (across group)
table_beta_filtered_cluster_2 <- table_beta_filtered%>%
group_by(cluster_2)%>%
mutate(mean_rel_beta = mean(rel_beta),
sd_rel_beta = sd(rel_beta),
lower_bound = mean_rel_beta - 3 * sd_rel_beta,
upper_bound = mean_rel_beta + 3 * sd_rel_beta) %>%
filter(rel_beta >= lower_bound & rel_beta <= upper_bound) %>%
ungroup()
table_central_filtered_cluster_2 <- table_beta_filtered_cluster_2%>%
filter(table_beta_filtered_cluster_2$channel %in% central_channels)
df_corr_central_filtered_cluster_2 <- table_central_filtered_cluster_2%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age, moca, hads_d_total_score,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_central_filtered_cluster_2%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot()+
geom_jitter()
# trying frontal beta (just because of topoplot) but does not seem to be so relevant
test_beta <- table_beta_filtered%>%
filter(table_beta_filtered$channel %in% frontal_channels)
df_corr_frontal_filtered_beta <- test_beta%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,years_of_education, cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_frontal_filtered_beta%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot()+
geom_jitter()
t.test(mean_beta_power~cluster_2, data = df_corr_frontal_filtered_beta, alternative = "two.sided")# 0.03
# +- 3 sd for aperiodic exponent
table_ape_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_ape = mean(aperiodic_exponent),
sd_ape = sd(aperiodic_exponent),
lower_bound = mean_ape - 3 * sd_ape,
upper_bound = mean_ape + 3 * sd_ape) %>%
filter(aperiodic_exponent >= lower_bound & aperiodic_exponent <= upper_bound) %>%
ungroup()
df_corr_ape <- table_ape_filtered%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_ape%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_exponent, color = cluster_2))+
geom_boxplot()+
geom_jitter()
# +- 3 SD for aperiodic exponent
table_apo_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_apo = mean(aperiodic_offset),
sd_apo = sd(aperiodic_offset),
lower_bound = mean_apo - 3 * sd_apo,
upper_bound = mean_apo + 3 * sd_apo) %>%
filter(aperiodic_offset >= lower_bound & aperiodic_offset <= upper_bound) %>%
ungroup()
df_corr_apo <- table_apo_filtered%>%
group_by(participant_id,group,tmt_a_time,facit_f_FS, tmt_b_minus_a,age,cluster_2)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_beta_power = mean(rel_beta),
mean_aperiodic_offset = mean(aperiodic_offset))
df_corr_apo%>%
group_by(group)%>%
ggplot(aes(x = group, y = mean_aperiodic_offset, color = group))+
geom_boxplot()+
geom_jitter()
df_corr_apo%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot()+
geom_jitter()
#-------- export tables for boxplots ---------------------
export_beta_c1 <- table_beta_filtered_cluster_2%>%
filter(cluster_2 == 'badperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_beta = mean(rel_beta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_beta_c2 <- table_beta_filtered_cluster_2%>%
filter(cluster_2 == 'goodperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_beta = mean(rel_beta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_delta_c1 <- table_delta_filtered_cluster_2%>%
filter(cluster_2 == 'badperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_delta_c2 <- table_delta_filtered_cluster_2%>%
filter(cluster_2 == 'goodperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
write.table(export_beta_c1, file = "export_beta_p1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_beta_c2, file = "export_beta_c2.txt", row.names = FALSE, col.names = FALSE)
write.table(export_delta_c1, file = "export_delta_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_delta_c2, file = "export_delta_c2.txt", row.names = FALSE, col.names = FALSE)
export_beta_c1%>%
summarise(min = min(mean_rel_beta),
max = max(mean_rel_beta))
export_beta_c2%>%
summarise(min = min(mean_rel_beta),
max = max(mean_rel_beta))
export_delta_c1%>%
summarise(min = min(mean_rel_delta),
max = max(mean_rel_delta))
export_delta_c2%>%
summarise(min = min(mean_rel_delta),
max = max(mean_rel_delta))
# now the same for aperiodic exponent
export_ape_c1 <- table_ape_filtered%>%
filter(cluster_2 == 'badperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_ape = mean(aperiodic_exponent))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_ape_c2 <- table_ape_filtered%>%
filter(cluster_2 == 'goodperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_ape = mean(aperiodic_exponent))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_apo_c1 <- table_apo_filtered%>%
filter(cluster_2 == 'badperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_apo = mean(aperiodic_offset))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_apo_c2 <- table_apo_filtered%>%
filter(cluster_2 == 'goodperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_apo = mean(aperiodic_offset))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
write.table(export_ape_c1, file = "export_ape_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_ape_c2, file = "export_ape_c2.txt", row.names = FALSE, col.names = FALSE)
write.table(export_apo_c1, file = "export_apo_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_apo_c2, file = "export_apo_c2.txt", row.names = FALSE, col.names = FALSE)
export_ape_c1%>%
summarise(min = min(mean_ape),
max = max(mean_ape))
export_ape_c2%>%
summarise(min = min(mean_ape),
max = max(mean_ape))
export_apo_c1%>%
summarise(min = min(mean_apo),
max = max(mean_apo))
export_apo_c2%>%
summarise(min = min(mean_apo),
max = max(mean_apo))
# now the same with the r squared
export_r_c1 <- table_power_5%>%
filter(cluster_2 == 'badperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_r = mean(r_squared, na.rm = T))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_r_c2 <- table_power_5%>%
filter(cluster_2 == 'goodperformer')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_r = mean(r_squared, na.rm = T))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
write.table(export_r_c1, file = "export_r_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_r_c2, file = "export_r_c2.txt", row.names = FALSE, col.names = FALSE)
export_r_c1%>%
summarise(min = min(mean_r),
max = max(mean_r))
export_r_c2%>%
summarise(min = min(mean_r),
max = max(mean_r))
table_power_5%>%
ggplot(aes(x = r_squared, y = aperiodic_exponent))+
geom_point()
cor.test(table_power_5$aperiodic_exponent, table_power_5$r_squared)
table_power_5%>%
ggplot(aes(x = r_squared, y = aperiodic_offset))+
geom_point()
cor.test(table_power_5$aperiodic_offset, table_power_5$r_squared)
