group_by(participant_id) %>%
mutate(mean_rel_beta1 = mean(rel_beta1),
sd_rel_beta1 = sd(rel_beta1),
lower_bound = mean_rel_beta1 - 3 * sd_rel_beta1,
upper_bound = mean_rel_beta1 + 3 * sd_rel_beta1) %>%
filter(rel_beta1 >= lower_bound & rel_beta1 <= upper_bound) %>%
ungroup()
table_central1_filtered <- table_beta1_filtered%>%
filter(table_beta1_filtered$channel %in% central_channels)
df_corr_central1_filtered <- table_central1_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age, moca,hads_d_total_score)%>%
summarise(mean_beta1_power = mean(rel_beta1))
df_corr_central1_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta1_power, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')
# sd +- 3 for beta 2
table_beta2_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_beta2 = mean(rel_beta2),
sd_rel_beta2 = sd(rel_beta2),
lower_bound = mean_rel_beta2 - 3 * sd_rel_beta2,
upper_bound = mean_rel_beta2 + 3 * sd_rel_beta2) %>%
filter(rel_beta2 >= lower_bound & rel_beta2 <= upper_bound) %>%
ungroup()
table_central2_filtered <- table_beta2_filtered%>%
filter(table_beta2_filtered$channel %in% central_channels)
df_corr_central2_filtered <- table_central2_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age, moca,hads_d_total_score)%>%
summarise(mean_beta2_power = mean(rel_beta2))
df_corr_central2_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta2_power, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')
wilcox.test(mean_beta2_power~cluster_2, data = df_corr_central2_filtered,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
## ----------- 5.3 aperiodic components -------------------------------------------
# +- 3 sd for aperiodic exponent
table_ape_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_ape = mean(aperiodic_exponent),
sd_ape = sd(aperiodic_exponent),
lower_bound = mean_ape - 3 * sd_ape,
upper_bound = mean_ape + 3 * sd_ape) %>%
filter(aperiodic_exponent >= lower_bound & aperiodic_exponent <= upper_bound) %>%
ungroup()
df_corr_ape <- table_ape_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,moca,hads_d_total_score)%>%
summarise(mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_ape%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_exponent, color = cluster_2))+
geom_boxplot()+
geom_jitter()
# +- 3 SD for aperiodic offset
table_apo_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_apo = mean(aperiodic_offset),
sd_apo = sd(aperiodic_offset),
lower_bound = mean_apo - 3 * sd_apo,
upper_bound = mean_apo + 3 * sd_apo) %>%
filter(aperiodic_offset >= lower_bound & aperiodic_offset <= upper_bound) %>%
ungroup()
df_corr_apo <- table_apo_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,moca,hads_d_total_score)%>%
summarise(mean_aperiodic_offset = mean(aperiodic_offset))
df_corr_apo%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot()+
geom_jitter()
#-------- 6. export tables for topoplots ---------------------
# beta power
export_beta_c1 <- table_beta_filtered_group%>%
filter(cluster_2 == 'c1')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_beta = mean(rel_beta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_beta_c2 <- table_beta_filtered_group%>%
filter(cluster_2 == 'c2')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_beta = mean(rel_beta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
# delta power
export_delta_c1 <- table_delta_filtered_group%>%
filter(cluster_2 == 'c1')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_delta_c <- table_delta_filtered_group%>%
filter(cluster_c2 == 'c2')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
# save in folder
write.table(export_beta_c1, file = "export_beta_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_beta_c2, file = "export_beta_c2.txt", row.names = FALSE, col.names = FALSE)
write.table(export_delta_c1, file = "export_delta_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_delta_c2, file = "export_delta_c2.txt", row.names = FALSE, col.names = FALSE)
export_delta_c2 <- table_delta_filtered_group%>%
filter(cluster_c2 == 'c2')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
#-------- 6. export tables for topoplots ---------------------
# beta power
export_beta_c1 <- table_beta_filtered_group%>%
filter(cluster_2 == 'c1')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_beta = mean(rel_beta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_beta_c2 <- table_beta_filtered_group%>%
filter(cluster_2 == 'c2')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_beta = mean(rel_beta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
# delta power
export_delta_c1 <- table_delta_filtered_group%>%
filter(cluster_2 == 'c1')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
export_delta_c2 <- table_delta_filtered_group%>%
filter(cluster_c2 == 'c2')%>%
mutate(channel = as.numeric(channel)) %>%
group_by(channel)%>%
summarise(mean_rel_delta = mean(rel_delta))%>%
arrange(channel)%>%
mutate(channel = replace(channel, is.na(channel), "Gnd"))
# save in folder
write.table(export_beta_c1, file = "export_beta_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_beta_c2, file = "export_beta_c2.txt", row.names = FALSE, col.names = FALSE)
write.table(export_delta_c1, file = "export_delta_c1.txt", row.names = FALSE, col.names = FALSE)
write.table(export_delta_c2, file = "export_delta_c2.txt", row.names = FALSE, col.names = FALSE)
#------ 5. exclude outliers--------
##-------- 5.1 delta ---------------
# relative delta power frontal
df_corr_frontal%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_delta_power, color = cluster_4))+
geom_boxplot()# two outliers in the without PCS cluster_4
# outlier removal inside the participant with +/- 3SD
table_delta_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_delta = mean(rel_delta),
sd_rel_delta = sd(rel_delta),
lower_bound = mean_rel_delta - 3 * sd_rel_delta,
upper_bound = mean_rel_delta + 3 * sd_rel_delta) %>%
filter(rel_delta >= lower_bound & rel_delta <= upper_bound) %>%
ungroup()
# last step: remove negative values
table_delta_filtered$rel_delta <- ifelse(
table_delta_filtered$rel_delta < 0, 0, table_delta_filtered$rel_delta)
# visualize the filtered data
table_delta_filtered%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = rel_delta, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()
# select only frontal channels
table_delta_frontal_filtered <- table_delta_filtered%>%
filter(table_delta_filtered$channel %in% frontal_channels)
df_corr_frontal_filtered <- table_delta_frontal_filtered%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age,years_of_education,moca)%>%
summarise(mean_delta_power = mean(rel_delta))
df_corr_frontal_filtered%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_delta_power, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# 4 outliers in without PCS
# additional filtering (across cluster_4)
table_delta_filtered_group <- table_delta_filtered%>%
group_by(cluster_4)%>%
mutate(mean_rel_delta = mean(rel_delta),
sd_rel_delta = sd(rel_delta),
lower_bound = mean_rel_delta - 3 * sd_rel_delta,
upper_bound = mean_rel_delta + 3 * sd_rel_delta) %>%
filter(rel_delta >= lower_bound & rel_delta <= upper_bound) %>%
ungroup()
table_frontal_filtered_group <- table_delta_filtered_group%>%
filter(table_delta_filtered_group$channel %in% frontal_channels)
df_corr_frontal_filtered_group <- table_frontal_filtered_group%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age,moca,hads_d_total_score)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_delta_power = mean(rel_delta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_frontal_filtered_group%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_delta_power, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# 2 outliers in withoutPCS and 1 in withPCS
# outliers delta absolute
table_delta_filtered_abs <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_abs_delta = mean(abs_delta),
sd_abs_delta = sd(abs_delta),
lower_bound = mean_abs_delta - 3 * sd_abs_delta,
upper_bound = mean_abs_delta + 3 * sd_abs_delta) %>%
filter(abs_delta >= lower_bound & abs_delta <= upper_bound) %>%
ungroup()
table_delta_frontal_filtered_abs <- table_delta_filtered_abs%>%
filter(table_delta_filtered_abs$channel %in% frontal_channels)
df_corr_frontal_filtered_abs <- table_delta_frontal_filtered_abs%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age,years_of_education)%>%
summarise(mean_delta_power_abs = mean(abs_delta))
df_corr_frontal_filtered_abs%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_delta_power_abs, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()
t.test(mean_delta_power_abs~cluster_4, data = df_corr_frontal_filtered_abs, alternative = 'less')
kruskal.test(mean_delta_power_abs~cluster_4, data = df_corr_frontal_filtered_abs, alternative = 'less')
kruskal.test(mean_delta_power_abs~cluster_4, data = df_corr_frontal_filtered_abs)
aov(mean_delta_power_abs~cluster_4, data = df_corr_frontal_filtered_abs)
## ----------- 5.2 relative beta power central ----------------------------
df_corr_central%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_beta_power, color = cluster_4))+
geom_boxplot()# one outlier in without PCS, one in the withPCS cluster_4
# sd +- 3 for beta
table_beta_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_beta = mean(rel_beta),
sd_rel_beta = sd(rel_beta),
lower_bound = mean_rel_beta - 3 * sd_rel_beta,
upper_bound = mean_rel_beta + 3 * sd_rel_beta) %>%
filter(rel_beta >= lower_bound & rel_beta <= upper_bound) %>%
ungroup()
table_central_filtered <- table_beta_filtered%>%
filter(table_beta_filtered$channel %in% central_channels)
df_corr_central_filtered <- table_central_filtered%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age, moca,hads_d_total_score)%>%
summarise(mean_beta_power = mean(rel_beta))
df_corr_central_filtered%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_beta_power, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# one outlier in withoutPCS cluster_4 and one in withPCS cluster_4
# additional filtering (across cluster_4)
table_beta_filtered_group <- table_beta_filtered%>%
group_by(cluster_4)%>%
mutate(mean_rel_beta = mean(rel_beta),
sd_rel_beta = sd(rel_beta),
lower_bound = mean_rel_beta - 3 * sd_rel_beta,
upper_bound = mean_rel_beta + 3 * sd_rel_beta) %>%
filter(rel_beta >= lower_bound & rel_beta <= upper_bound) %>%
ungroup()
table_central_filtered_group <- table_beta_filtered_group%>%
filter(table_beta_filtered_group$channel %in% central_channels)
df_corr_central_filtered_group <- table_central_filtered_group%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age, moca, hads_d_total_score)%>%
summarise(mean_beta_power = mean(rel_beta))
df_corr_central_filtered_group%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_beta_power, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# 1 outlier in without PCS and 2 in with PCS
# sd +- 3 for beta 1
table_beta1_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_beta1 = mean(rel_beta1),
sd_rel_beta1 = sd(rel_beta1),
lower_bound = mean_rel_beta1 - 3 * sd_rel_beta1,
upper_bound = mean_rel_beta1 + 3 * sd_rel_beta1) %>%
filter(rel_beta1 >= lower_bound & rel_beta1 <= upper_bound) %>%
ungroup()
table_central1_filtered <- table_beta1_filtered%>%
filter(table_beta1_filtered$channel %in% central_channels)
df_corr_central1_filtered <- table_central1_filtered%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age, moca,hads_d_total_score)%>%
summarise(mean_beta1_power = mean(rel_beta1))
df_corr_central1_filtered%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_beta1_power, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')
# sd +- 3 for beta 2
table_beta2_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_beta2 = mean(rel_beta2),
sd_rel_beta2 = sd(rel_beta2),
lower_bound = mean_rel_beta2 - 3 * sd_rel_beta2,
upper_bound = mean_rel_beta2 + 3 * sd_rel_beta2) %>%
filter(rel_beta2 >= lower_bound & rel_beta2 <= upper_bound) %>%
ungroup()
table_central2_filtered <- table_beta2_filtered%>%
filter(table_beta2_filtered$channel %in% central_channels)
df_corr_central2_filtered <- table_central2_filtered%>%
group_by(participant_id,cluster_4,tmt_a_time,facit_f_FS, tmt_diff,age, moca,hads_d_total_score)%>%
summarise(mean_beta2_power = mean(rel_beta2))
df_corr_central2_filtered%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_beta2_power, color = cluster_4))+
geom_boxplot(outlier.colour = 'black')
wilcox.test(mean_beta2_power~cluster_4, data = df_corr_central2_filtered,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
kruskal.test(mean_beta_power_abs~cluster_4, data = df_corr_central_filtered_abs)
# ----- 8. boxplots and stats -------------------
# Define custom colors
color_palette <- c("c1" = '#02CAF5',
"c2" = "#F59541")
##---- 8.1 aperiodic exponent general ------------
# mean
df_corr_ape%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_exponent, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic exponent')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
wilcox.test(mean_aperiodic_exponent~cluster_2, data = df_corr_ape,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# 0.6057
df_corr_ape <- df_corr_ape%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
# in order to get the z value
result <- coin::wilcox_test(data = df_corr_ape,mean_aperiodic_exponent~cluster_2, comparisons = list(c('c1','c2')), alternative = 'two.sided')
# get the effsize
df_corr_ape%>%
ungroup()%>% # apparently you have to ungroup here, otherwise, wilcox_effsize does not work
wilcox_effsize(mean_aperiodic_exponent~cluster_2)
install.packages("effectsize")
# ----- 8. boxplots and stats -------------------
# Define custom colors
color_palette <- c("c1" = '#02CAF5',
"c2" = "#F59541")
##---- 8.1 aperiodic exponent general ------------
# mean
df_corr_ape%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_exponent, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic exponent')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
wilcox.test(mean_aperiodic_exponent~cluster_2, data = df_corr_ape,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# 0.6057
df_corr_ape <- df_corr_ape%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
# in order to get the z value
result <- coin::wilcox_test(data = df_corr_ape,mean_aperiodic_exponent~cluster_2, comparisons = list(c('c1','c2')), alternative = 'two.sided')
# get the effsize
df_corr_ape%>%
ungroup()%>% # apparently you have to ungroup here, otherwise, wilcox_effsize does not work
wilcox_effsize(mean_aperiodic_exponent~cluster_2)
##-------8.2 aperiodic offset general-----------
# mean
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic offset')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
wilcox.test(mean_aperiodic_offset~cluster_2, data = df_corr_apo,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
df_corr_apo <- df_corr_apo%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
result <- coin::wilcox_test(data = df_corr_apo,mean_aperiodic_offset~cluster_2, comparisons = list(c('c1','c2')), alternative = 'two.sided')
# get the effsize
df_corr_apo%>%
ungroup()%>% # apparently you have to ungroup here, otherwise, wilcox_effsize does not work
wilcox_effsize(mean_aperiodic_offset~cluster_2)
# but be aware that the c2 cluster_2 is a bit younger
# exponent
df_corr_ape%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = age, y = mean_aperiodic_exponent, color = cluster_2))+
geom_point()+
geom_smooth(method=lm , color="black", fill="grey", se=TRUE)+
scale_color_manual(values = color_palette) +
theme_classic() +
theme(legend.position = c(0.20, 0.15))+
stat_cor(aes(color = "Correlation: "),method = "pearson", label.x = 60, label.y = 1.1,hjust=0)+
labs(y = 'mean aperiodic exponent')
cor.test(df_corr_ape$age,df_corr_ape$mean_aperiodic_exponent)# r -.61, p 6.83e-06
# offset
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = age, y = mean_aperiodic_offset, color = cluster_2))+
geom_point()+
geom_smooth(method=lm , color="black", fill="grey", se=TRUE)+
scale_color_manual(values = color_palette) +
theme_classic() +
theme(legend.position = c(0.20, 0.15))+
stat_cor(aes(color = "Correlation: "),method = "pearson", label.x = 60, label.y = 0.8,hjust=0)+
labs(y = 'mean aperiodic offset')
cor.test(df_corr_apo$age,df_corr_apo$mean_aperiodic_offset)# significant (p = 0.036) r = -0.31
##------ 8.3 rel and absolute delta frontal---------------
df_corr_frontal_filtered_group%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = TRUE, color = 'black')+
labs(y = 'mean delta power [μV^2] in frontal ROI')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
# in order to get the W statistics
wilcox.test(mean_delta_power~cluster_2, data = df_corr_frontal_filtered_group,
alternative = 'less',
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
df_corr_frontal_filtered_group <-df_corr_frontal_filtered_group%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
##------ 8.3 rel and absolute delta frontal---------------
df_corr_frontal_filtered_group%>%
mutate(cluster_4 = fct_recode(cluster_4,
"c1" = "c1",
"c2" = "c2",
"c3" = "c3",
"c4" = "c4"))%>%
group_by(cluster_4)%>%
ggplot(aes(x = cluster_4, y = mean_delta_power, color = cluster_4))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2","c3","c4")),map_signif_level = TRUE, color = 'black')+
labs(y = 'mean delta power [μV^2] in frontal ROI')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
# in order to get the W statistics
kruskal.test(mean_delta_power~cluster_2, data = df_corr_frontal_filtered_group,
alternative = 'less',
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
# in order to get the W statistics
kruskal.test(mean_delta_power~cluster_4, data = df_corr_frontal_filtered_group,
alternative = 'less',
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
# in order to get the W statistics
kruskal.test(mean_delta_power~cluster_4, data = df_corr_frontal_filtered_group,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
# in order to get the W statistics
kruskal.test(mean_delta_power~cluster_4, data = df_corr_frontal_filtered_group)
df_corr_frontal_filtered_group <-df_corr_frontal_filtered_group%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
# in order to get the z value
result <- coin::wilcox_test(data = df_corr_frontal_filtered_group,mean_delta_power~cluster_2, comparisons = list(c('c1','c2')), alternative = 'less')
