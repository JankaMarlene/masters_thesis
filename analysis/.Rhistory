# Preprocessing
alldata <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", header = TRUE)
# Preprocessing
data <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", header = TRUE)
# Preprocessing
alldata <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", header = TRUE)
# List off important column
important_columns <- c("participant_id","age","group","tmt_a_time","tmt_b_time")
# Subset of the dataset that contains only the important columns
cleaned_data <- alldata[, colnames(alldata) %in% import_columns]
# Preprocessing
alldata <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", header = TRUE)
# List off important column
important_columns <- c("participant_id","age","group","tmt_a_time","tmt_b_time")
# Subset of the dataset that contains only the important columns
cleaned_data <- alldata[, colnames(alldata) %in% important_columns]
View(data)
View(cleaned_data)
View(alldata)
View(data)
# Preprocessing
alldata <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", header = TRUE)
# List off important column
important_columns <- c("participant_id","age","sex","group","graduation","years_of_education","neurological_diseases_1","facit_f_total_score","hads_a_total_score","hads_d_total_score","psqi_total_score","moca","pvt_reaction_time","nback_miss_1","nback_false_alarm_1","nback_miss_2","nback_false_alarm_2","tmt_a_time","tmt_b_time")
# Subset of alldata that contains only the important columns
subset <- alldata[, colnames(alldata) %in% important_columns]
# Subset with all relevant cognitive data
cognitive_columns <- c("participant_id","moca","pvt_reaction_time","nback_miss_1","nback_false_alarm_1","nback_miss_2","nback_false_alarm_2","tmt_a_time","tmt_b_time")
cog_subset <- alldata[,colnames(alldata) %in% cognitive_columns]
View(cog_subset)
View(alldata)
View(subset)
# Preprocessing
alldata <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", header = TRUE)
# List off important column
important_columns <- c("participant_id","age","sex","group","graduation","years_of_education","neurological_diseases_1","facit_f_total_score","hads_a_total_score","hads_d_total_score","psqi_total_score","moca","pvt_reaction_time","nback_miss_1","nback_false_alarm_1","nback_miss_2","nback_false_alarm_2","tmt_a_time","tmt_b_time")
# Subset of alldata that contains only the important columns
subset <- alldata[,important_columns]
View(subset)
# Subset with all relevant cognitive data
cognitive_columns <- c("participant_id","moca","pvt_reaction_time","nback_miss_1","nback_false_alarm_1","nback_miss_2","nback_false_alarm_2","tmt_a_time","tmt_b_time")
cog_subset <- alldata[,cognitive_columns]
View(cog_subset)
# Overwrite "moca" variable with scaled values
cog_subset$moca <- ifelse(cog_subset$moca > cutoff_score, 1, 0)
# Define cutoff score for moca
cutoff_score <- 25
# Overwrite "moca" variable with scaled values
cog_subset$moca <- ifelse(cog_subset$moca > cutoff_score, 1, 0)
View(cog_subset)
View(alldata)
View(subset)
View(subset)
# Korrelationsmatrix berechnen
cor(cog_subset)
source("C:/Users/jankj/OneDrive/Desktop/masters_thesis/analysis/preprocessing.R", echo=TRUE)
# Überprüfen auf fehlende Werte
any(is.na(cog_subset))
# Überprüfen auf fehlende Werte
any(is.n/a(cog_subset))
View(cog_subset)
# Preprocessing data
alldata <- read.delim("C:/Users/jankj/OneDrive/Desktop/masters_thesis/data/participants.tsv", na.strings = "n/a", header = TRUE)
# List off important column
important_columns <- c("participant_id","age","sex","group","graduation","years_of_education","neurological_diseases_1","facit_f_total_score","hads_a_total_score","hads_d_total_score","psqi_total_score","moca","pvt_reaction_time","nback_miss_1","nback_false_alarm_1","nback_miss_2","nback_false_alarm_2","tmt_a_time","tmt_b_time")
# Subset of alldata that contains only the important columns
subset <- alldata[,important_columns]
# Subset with all relevant cognitive data
cognitive_columns <- c("participant_id","moca","pvt_reaction_time","nback_miss_1","nback_false_alarm_1","nback_miss_2","nback_false_alarm_2","tmt_a_time","tmt_b_time")
cog_subset <- alldata[,cognitive_columns]
# Convert 'moca' variable to a binary variable based on a cutoff score of 25
# 0 represents scores less than 26 (may) indicating cognitive impairment
# 1 represents scores more than 25 (may) indicating no cognitive impairment
# Define cutoff score for moca
# Overwrite "moca" variable with binary scaled values
cutoff_score <- 25
cog_subset$moca <- ifelse(cog_subset$moca > cutoff_score, 1, 0)
# Überprüfen auf fehlende Werte
any(is.na(cog_subset))
# Korrelationsmatrix berechnen
cor(cog_subset)
View(alldata)
ssing values
source("C:/Users/jankj/OneDrive/Desktop/masters_thesis/analysis/preprocessing.R", echo=TRUE)
View(cog_subset_clean)
# Imputation of missing values
cog_subset_imputed <- na.mean(cog_subset)
# Installing tidyverse package
install.packages("tidyverse")
library(tidyverse)
# Installing tidyverse package
# install.packages("tidyverse")
library(tidyverse)
# Installing tidyverse package
# install.packages("tidyverse")
library(utf8)
# Installing tidyverse package
# install.packages("tidyverse")
install.packages(utf8)
install.packages("tidyverse")
install.packages("tidyverse")
# Installing tidyverse package
# install.packages("tidyverse")
library(tidyverse)
install.packages("utf8")
# Installing tidyverse package
# install.packages("tidyverse")
library(tidyverse)
install.packages("tzdb")
# Installing tidyverse package
# install.packages("tidyverse")
library(tidyverse)
# Installing tidyverse package
# install.packages("tidyverse")
library(tidyverse)
