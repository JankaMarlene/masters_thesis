ggplot(aes(x = number_epochs, y = mean_beta_power, color = cluster_2))+
geom_point()
cor.test(df_corr_central$mean_delta_power,df_corr_central$number_epochs)
# number of epochs correlates with fatigue score!
table_power_5%>%
ggplot(aes(x = number_epochs, y = facit_f_FS))+
geom_point()
cor.test(table_power_5$number_epochs, table_power_5$facit_f_FS)
# summarize values into one table
table_behav <- df_corr_frontal%>%
group_by(cluster_2)%>%
summarise(mean_facit = mean(facit_f_FS, na.rm = T),
sd_facit = sd(facit_f_FS, na.rm = T),
mean_hads = mean(hads_d_total_score, na.rm = T),
sd_hads = sd(hads_d_total_score, na.rm = T),
mean_tmta = mean(tmt_a_time),
sd_tmta = sd(tmt_a_time),
mean_tmtb_a = mean(tmt_diff),
sd_tmtb_a = sd(tmt_diff),
mean_y_o = mean(years_of_education),
sd_y_o = sd(years_of_education),
mean_epoc = mean(number_epochs),
sd_epoc = sd(number_epochs),
mean_moca = mean(moca, na.rm = T),
sd_moca = sd(moca, na.rm = T))
# good channels
channel_artefacts <- table_power_5%>%
group_by(cluster_2)%>%
summarise(mean_channels_ica = mean(num_chan_ica),
sd_channels_ica = sd(num_chan_ica),
max_channels_ica = max(num_chan_ica),
min_channels_ica = min(num_chan_ica),
mean_channels_arte = mean(num_chan_artefact),
sd_channels_arte = sd(num_chan_artefact),
max_channels_arte = max(num_chan_artefact),
min_channels_arte = min(num_chan_artefact))
#------ 5. exclude outliers--------
##-------- 5.1 delta ---------------
# relative delta power frontal
df_corr_frontal%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot()# two outliers in the c2 cluster_2
# outlier removal inside the participant with +/- 3SD
table_delta_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_delta = mean(rel_delta),
sd_rel_delta = sd(rel_delta),
lower_bound = mean_rel_delta - 3 * sd_rel_delta,
upper_bound = mean_rel_delta + 3 * sd_rel_delta) %>%
filter(rel_delta >= lower_bound & rel_delta <= upper_bound) %>%
ungroup()
# last step: remove negative values
table_delta_filtered$rel_delta <- ifelse(
table_delta_filtered$rel_delta < 0, 0, table_delta_filtered$rel_delta)
# visualize the filtered data
table_delta_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = rel_delta, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()
# select only frontal channels
table_delta_frontal_filtered <- table_delta_filtered%>%
filter(table_delta_filtered$channel %in% frontal_channels)
df_corr_frontal_filtered <- table_delta_frontal_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,years_of_education,moca)%>%
summarise(mean_delta_power = mean(rel_delta))
df_corr_frontal_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# 4 outliers in c2
# additional filtering (across cluster_2)
table_delta_filtered_group <- table_delta_filtered%>%
group_by(cluster_2)%>%
mutate(mean_rel_delta = mean(rel_delta),
sd_rel_delta = sd(rel_delta),
lower_bound = mean_rel_delta - 3 * sd_rel_delta,
upper_bound = mean_rel_delta + 3 * sd_rel_delta) %>%
filter(rel_delta >= lower_bound & rel_delta <= upper_bound) %>%
ungroup()
table_frontal_filtered_group <- table_delta_filtered_group%>%
filter(table_delta_filtered_group$channel %in% frontal_channels)
df_corr_frontal_filtered_group <- table_frontal_filtered_group%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,moca,hads_d_total_score)%>%
summarise(mean_delta_power = mean(rel_delta),
mean_delta_power = mean(rel_delta),
mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_frontal_filtered_group%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# 2 outliers in c2 and 1 in c1
# outliers delta absolute
table_delta_filtered_abs <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_abs_delta = mean(abs_delta),
sd_abs_delta = sd(abs_delta),
lower_bound = mean_abs_delta - 3 * sd_abs_delta,
upper_bound = mean_abs_delta + 3 * sd_abs_delta) %>%
filter(abs_delta >= lower_bound & abs_delta <= upper_bound) %>%
ungroup()
table_delta_frontal_filtered_abs <- table_delta_filtered_abs%>%
filter(table_delta_filtered_abs$channel %in% frontal_channels)
df_corr_frontal_filtered_abs <- table_delta_frontal_filtered_abs%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,years_of_education)%>%
summarise(mean_delta_power_abs = mean(abs_delta))
df_corr_frontal_filtered_abs%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power_abs, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()
kruskal.test(mean_delta_power_abs~cluster_2, data = df_corr_frontal_filtered_abs)
## ----------- 5.2 relative beta power central ----------------------------
df_corr_central%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot()# one outlier in c2, one in the c1 cluster_2
# sd +- 3 for beta
table_beta_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_rel_beta = mean(rel_beta),
sd_rel_beta = sd(rel_beta),
lower_bound = mean_rel_beta - 3 * sd_rel_beta,
upper_bound = mean_rel_beta + 3 * sd_rel_beta) %>%
filter(rel_beta >= lower_bound & rel_beta <= upper_bound) %>%
ungroup()
table_central_filtered <- table_beta_filtered%>%
filter(table_beta_filtered$channel %in% central_channels)
df_corr_central_filtered <- table_central_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age, moca,hads_d_total_score)%>%
summarise(mean_beta_power = mean(rel_beta))
df_corr_central_filtered%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# one outlier in c2 cluster_2 and one in c1 cluster_2
# additional filtering (across cluster_2)
table_beta_filtered_group <- table_beta_filtered%>%
group_by(cluster_2)%>%
mutate(mean_rel_beta = mean(rel_beta),
sd_rel_beta = sd(rel_beta),
lower_bound = mean_rel_beta - 3 * sd_rel_beta,
upper_bound = mean_rel_beta + 3 * sd_rel_beta) %>%
filter(rel_beta >= lower_bound & rel_beta <= upper_bound) %>%
ungroup()
table_central_filtered_group <- table_beta_filtered_group%>%
filter(table_beta_filtered_group$channel %in% central_channels)
df_corr_central_filtered_group <- table_central_filtered_group%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age, moca, hads_d_total_score)%>%
summarise(mean_beta_power = mean(rel_beta))
df_corr_central_filtered_group%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot(outlier.colour = 'black')+
geom_jitter()# 1 outlier in c2 and 2 in c1
## ----------- 5.3 aperiodic components -------------------------------------------
# +- 3 sd for aperiodic exponent
table_ape_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_ape = mean(aperiodic_exponent),
sd_ape = sd(aperiodic_exponent),
lower_bound = mean_ape - 3 * sd_ape,
upper_bound = mean_ape + 3 * sd_ape) %>%
filter(aperiodic_exponent >= lower_bound & aperiodic_exponent <= upper_bound) %>%
ungroup()
df_corr_ape <- table_ape_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,moca,hads_d_total_score)%>%
summarise(mean_aperiodic_exponent = mean(aperiodic_exponent))
df_corr_ape%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_exponent, color = cluster_2))+
geom_boxplot()+
geom_jitter()
# +- 3 SD for aperiodic offset
table_apo_filtered <-table_power_5%>%
group_by(participant_id) %>%
mutate(mean_apo = mean(aperiodic_offset),
sd_apo = sd(aperiodic_offset),
lower_bound = mean_apo - 3 * sd_apo,
upper_bound = mean_apo + 3 * sd_apo) %>%
filter(aperiodic_offset >= lower_bound & aperiodic_offset <= upper_bound) %>%
ungroup()
df_corr_apo <- table_apo_filtered%>%
group_by(participant_id,cluster_2,tmt_a_time,facit_f_FS, tmt_diff,age,moca,hads_d_total_score)%>%
summarise(mean_aperiodic_offset = mean(aperiodic_offset))
df_corr_apo%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot()+
geom_jitter()
#--------- 7. check requirements-----------------------------
# I need data sets per cluster_2 in order to check the normality requirement separately
shapiro_df_c1 <- df_corr_frontal_filtered_group%>%
filter(cluster_2 == '1')
shapiro_df_c2 <- df_corr_frontal_filtered_group%>%
filter(cluster_2 == '2')
# normality
df_corr_frontal_filtered_group%>%
ggplot(aes(x = mean_delta_power))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()# looks a bit weird but a similar kind of weird
shapiro.test(shapiro_df_c1$mean_delta_power)# 0.02
shapiro.test(shapiro_df_c2$mean_delta_power)# 0.0388
# normality beta
shapiro_df_c1 <- df_corr_central_filtered_group%>%
filter(cluster_2 == 'c1')
shapiro_df_c2 <- df_corr_central_filtered_group%>%
filter(cluster_2 == 'c2')
df_corr_central_filtered%>%
ggplot(aes(x = mean_beta_power))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')# looks really skew (bot equally skew in both groups, a bit worse in c1 maybe) -> maybe use nonparametric stats
shapiro.test(shapiro_df_c1$mean_beta_power)# 8.953e-05
shapiro.test(shapiro_df_c2$mean_beta_power)# 0.001104
# normality aperiodic offset
shapiro_df_c1<- df_corr_apo%>%
filter(cluster_2 == 'c1')
shapiro_df_c2 <- df_corr_apo%>%
filter(cluster_2 == 'c2')
df_corr_apo%>%
ggplot(aes(x = mean_aperiodic_offset))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')+
theme_classic()# looks quite normally distributed
shapiro.test(shapiro_df_c1$mean_aperiodic_offset)# 0.3911
shapiro.test(shapiro_df_c2$mean_aperiodic_offset)# 0.4375
# normality aperiodic exponent
shapiro_df_c1 <- df_corr_ape%>%
filter(cluster_2 == 'c1')
shapiro_df_c2 <- df_corr_ape%>%
filter(cluster_2 == 'c2')
df_corr_ape%>%
ggplot(aes(x = mean_aperiodic_exponent))+
geom_histogram(color = "black",
fill = "white", bins = sqrt(100))+
facet_wrap(~cluster_2,scales = 'free')# looks different between the groups
shapiro.test(shapiro_df_c1$mean_aperiodic_exponent)# 0.01124
shapiro.test(shapiro_df_c2$mean_aperiodic_exponent)# 0.5865
# variance
leveneTest(mean_delta_power~cluster_2,data = df_corr_frontal_filtered_group)# not significant
leveneTest(mean_beta_power~cluster_2,data = df_corr_central_filtered_group)# not significant
leveneTest(mean_aperiodic_offset~cluster_2,data = df_corr_apo)# 0.0451
leveneTest(mean_aperiodic_exponent~cluster_2,data = df_corr_ape)# not significant
leveneTest(mean_beta1_power~cluster_2,data = df_corr_central1_filtered)# not significant
leveneTest(mean_beta2_power~cluster_2,data = df_corr_central2_filtered)# not significant
# ----- 8. boxplots and stats -------------------
# Define custom colors
color_palette <- c("c1" = '#02CAF5',
"c2" = "#F59541")
##---- 8.1 aperiodic exponent general ------------
# mean
df_corr_ape%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_exponent, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic exponent')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
wilcox.test(mean_aperiodic_exponent~cluster_2, data = df_corr_ape,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)# 0.6057
df_corr_ape <- df_corr_ape%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
# in order to get the z value
result <- coin::wilcox_test(data = df_corr_ape,mean_aperiodic_exponent~cluster_2, comparisons = list(c('c1','c2')), alternative = 'two.sided')
# get the effsize
df_corr_ape%>%
ungroup()%>% # apparently you have to ungroup here, otherwise, wilcox_effsize does not work
wilcox_effsize(mean_aperiodic_exponent~cluster_2)
##-------8.2 aperiodic offset general-----------
# mean
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic offset')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
##-------8.2 aperiodic offset general-----------
# mean
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'NA', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic offset')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
##-------8.2 aperiodic offset general-----------
# mean
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = '', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic offset')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
##-------8.2 aperiodic offset general-----------
# mean
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'black', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic offset')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
##-------8.2 aperiodic offset general-----------
# mean
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_aperiodic_offset, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'NA', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = function(p) sprintf("p = %.2g", p), test = 'wilcox.test', color = 'black')+
labs(y = 'mean aperiodic offset')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
wilcox.test(mean_aperiodic_offset~cluster_2, data = df_corr_apo,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
df_corr_apo <- df_corr_apo%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
result <- coin::wilcox_test(data = df_corr_apo,mean_aperiodic_offset~cluster_2, comparisons = list(c('c1','c2')), alternative = 'two.sided')
# get the effsize
df_corr_apo%>%
ungroup()%>% # apparently you have to ungroup here, otherwise, wilcox_effsize does not work
wilcox_effsize(mean_aperiodic_offset~cluster_2)
# but be aware that the c2 cluster_2 is a bit younger
# exponent
df_corr_ape%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = age, y = mean_aperiodic_exponent, color = cluster_2))+
geom_point()+
geom_smooth(method=lm , color="black", fill="grey", se=TRUE)+
scale_color_manual(values = color_palette) +
theme_classic() +
theme(legend.position = c(0.20, 0.15))+
stat_cor(aes(color = "Correlation: "),method = "pearson", label.x = 60, label.y = 1.1,hjust=0)+
labs(y = 'mean aperiodic exponent')
cor.test(df_corr_ape$age,df_corr_ape$mean_aperiodic_exponent)# r -.61, p 6.83e-06
# offset
df_corr_apo%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = age, y = mean_aperiodic_offset, color = cluster_2))+
geom_point()+
geom_smooth(method=lm , color="black", fill="grey", se=TRUE)+
scale_color_manual(values = color_palette) +
theme_classic() +
theme(legend.position = c(0.20, 0.15))+
stat_cor(aes(color = "Correlation: "),method = "pearson", label.x = 60, label.y = 0.8,hjust=0)+
labs(y = 'mean aperiodic offset')
cor.test(df_corr_apo$age,df_corr_apo$mean_aperiodic_offset)# significant (p = 0.036) r = -0.31
##------ 8.3 rel and absolute delta frontal---------------
df_corr_frontal_filtered_group%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = 'NA', width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = TRUE, color = 'black')+
labs(y = 'mean delta power [μV^2] in frontal ROI')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
# in order to get the W statistics
wilcox.test(mean_delta_power~cluster_2, data = df_corr_frontal_filtered_group,
alternative = 'less',
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
df_corr_frontal_filtered_group <-df_corr_frontal_filtered_group%>%
mutate(cluster_2 = as.factor(cluster_2))# otherwise wilcoxon_test from coin does not work
# in order to get the z value
result <- coin::wilcox_test(data = df_corr_frontal_filtered_group,mean_delta_power~cluster_2, comparisons = list(c('c1','c2')), alternative = 'less')
# get the effsize
df_corr_frontal_filtered_group%>%
ungroup()%>%
wilcox_effsize(mean_delta_power~cluster_2)
# absolute delta
df_corr_frontal_filtered_abs%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_delta_power_abs))+
geom_boxplot()+
geom_jitter(width = 0.3, height = 0, alpha = 0.1)
wilcox.test(mean_delta_power_abs~cluster_2, data = df_corr_frontal_filtered_abs,
exact = FALSE,
correct = FALSE,
conf.int = FALSE)
t.test(mean_delta_power_abs~cluster_2, data = df_corr_frontal_filtered_abs, alternative = "less", paired = FALSE)
##----- 8.4 mean beta -----------------
df_corr_central_filtered_group%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = NA, width=0.5)+
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
#geom_jitter(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.6, size = 2)+# Add p-value to plot
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = TRUE, color = 'black')+
labs(y = 'mean beta power [μV^2] in central ROI')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
##----- 8.4 mean beta -----------------
df_corr_central_filtered_group%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = NA, width=0.5)+
#geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_jitter(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.6, size = 2)+# Add p-value to plot
geom_signif(comparisons = list(c("c1","c2")),map_signif_level = TRUE, color = 'black')+
labs(y = 'mean beta power [μV^2] in central ROI')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
##----- 8.4 mean beta -----------------
df_corr_central_filtered_group%>%
mutate(cluster_2 = fct_recode(cluster_2,
"c1" = "c1",
"c2" = "c2"))%>%
group_by(cluster_2)%>%
ggplot(aes(x = cluster_2, y = mean_beta_power, color = cluster_2))+
geom_boxplot(size = 0.75,outlier.colour = NA, width=0.5)+
#geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2)+
geom_jitter(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.6, size = 2)+# Add p-value to plot
#geom_signif(comparisons = list(c("c1","c2")),map_signif_level = TRUE, color = 'black')+
labs(y = 'mean beta power [μV^2] in central ROI')+
scale_color_manual(values = color_palette) +
theme_classic()+
guides(color = FALSE)+
theme(
text = element_text(size = 14)  # Adjust the size here
)
